<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on Nicolas Serbin's</title><link>https://nserbin.github.io/posts/aws/</link><description>Recent content in AWS on Nicolas Serbin's</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 27 Aug 2025 07:00:00 +0100</lastBuildDate><atom:link href="https://nserbin.github.io/posts/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>RDS Snapshot → S3: Diagnose and Fix a Disabled Export</title><link>https://nserbin.github.io/posts/aws/aws-rds/export-to-s3/</link><pubDate>Wed, 27 Aug 2025 07:00:00 +0100</pubDate><guid>https://nserbin.github.io/posts/aws/aws-rds/export-to-s3/</guid><description>&lt;p>Before diving into the why and how, here’s what we deliver:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>⏱️ Clear diagnosis in under a minute (no console guesswork)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🫥 Non-intrusive path: &lt;strong>temporary&lt;/strong> instance only (we don’t touch your current RDS)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🔐 Export that works, with the correct &lt;strong>IAM/KMS&lt;/strong> shape&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ Copy-paste commands for your runbook or CI&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div style="margin-top: 2rem;">&lt;/div>
&lt;div class="alert success">
&lt;span>&lt;i data-feather="check-circle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>All of this without modifying your existing DB instance — restore the snapshot into a temporary &lt;strong>gp3&lt;/strong> instance 🚀, create a new snapshot 📸, and export that one 📦.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div style="margin-top: 4rem;">&lt;/div>
&lt;h2 id="-why-the-export-is-disabled">🔒 Why the export is disabled&lt;/h2>
&lt;p>&lt;div style="margin-top: 1rem;">&lt;/div>
The most frequent blocker is simple: the snapshot was taken from an instance on &lt;strong>magnetic storage&lt;/strong>. Snapshots with that lineage aren’t eligible for export. The console is vague; the CLI tells you exactly what’s going on.&lt;/p></description></item><item><title>NGINX Out, ALB In - 70% Cheaper Redirects with Zero Servers</title><link>https://nserbin.github.io/posts/aws/aws-networking/from-nginx-to-alb/</link><pubDate>Mon, 14 Jul 2025 22:00:00 +0100</pubDate><guid>https://nserbin.github.io/posts/aws/aws-networking/from-nginx-to-alb/</guid><description>&lt;p>Before jumping into the why and how, here&amp;rsquo;s what we achieved:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>✅ Replaced a single point of failure with AWS-native components&lt;/p>
&lt;/li>
&lt;li>
&lt;p>💸 Reduced monthly costs by 70%&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🧑‍💻 No more SSH, servers, or NGINX restarts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🔐 Fully managed SSL with ACM&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🛠️ Everything codified and versioned via Terraform&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="alert success">
&lt;span>&lt;i data-feather="check-circle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>All of this — without a single EC2 server or NGINX config file.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div style="margin-top: 3rem;">&lt;/div>
&lt;h2 id="why-we-left-ec2--nginx-behind-and-how-much-it-saved-us">Why we left EC2 + NGINX behind (and how much it saved us)&lt;/h2>
&lt;p>&lt;div style="margin-top: 1rem;">&lt;/div>
We had a simple goal: redirect traffic for over &lt;strong>70 different domains&lt;/strong>.&lt;br>
At first, we solved it with what we knew — an &lt;strong>EC2 instance running NGINX&lt;/strong> with hardcoded &lt;code>301&lt;/code> and &lt;code>302&lt;/code> rules. It worked… until it didn’t.&lt;/p></description></item></channel></rss>